<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>HelpDesk Dashboard</title>

  <style>
    /* Global styles for body */
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #000000, #1e3d59); /* Dark gradient background */
      color: #f5f5f5; /* Light-colored text for contrast */
      padding: 20px;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center; /* Center vertically */
      min-height: 100vh;
      width: 100vw;
      overflow-y: auto;
      margin: 0;
      overflow-x: hidden;
    }

    /* Title styling */
    h1 {
      color: #c5c3c3;
      margin-top: 30px;
      font-size: 36px;
      text-align: center;
      margin-bottom: 20px;
    }

    /* Button styling */
    .nav-button {
      padding: 6px 12px; /* Reduced padding */
      background: linear-gradient(135deg, #1e3d59, #0b0975); /* Gradient background */
      color: #f5f5f5;
      font-size: 14px;
      border: 1px solid rgba(255, 255, 255, 0.6);
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.2s ease;
      margin: 10px;
    }

    .nav-button:hover {
      background: linear-gradient(135deg, #000000, #1e3d59); /* Slightly reversed gradient on hover */
      transform: translateY(-3px); /* Lift effect on hover */
    }

    .nav-button:active {
      background: linear-gradient(135deg, #1e3d59, #000000); /* Reversed gradient on active */
      transform: translateY(1px); /* Pressed down effect */
    }

    .nav-button:disabled {
      background-color: rgba(255, 255, 255, 0.1);
      cursor: not-allowed;
    }

    /* Content section */
    .content {
      text-align: center;
      margin-top: 20px;
      font-size: 16px;
    }

    /* Navigation buttons */
    nav {
      display: flex;
      justify-content: center; /* Center horizontally */
      gap: 15px;
      width: 100%;
      flex-wrap: wrap; /* Wrap buttons on smaller screens */
    }

    /* Notes section */
    .note {
      background-color: rgba(255, 235, 59, 0.2); /* Transparent yellow */
      padding: 15px;
      margin: 20px 0;
      border-radius: 8px;
      font-size: 12px;
      color: #f5f5f5;
      border-left: 5px solid #fbc02d;
    }

    /* Specific note types */
    .note.success {
      background-color: rgba(72, 182, 92, 0.2);
      border-left: 5px solid #28a745;
    }

    .note.error {
      background-color: rgba(248, 215, 218, 0.2);
      border-left: 5px solid #dc3545;
    }

    .note.warning {
      background-color: rgba(255, 243, 205, 0.2);
      border-left: 5px solid #ffc107;
    }

    /* Responsive styling */
    @media (max-width: 768px) {
      h1 {
        font-size: 28px; /* Slightly smaller font for small screens */
      }

      .nav-button {
        font-size: 12px;
        padding: 6px 10px; /* Further reduced padding */
        width: 45%; /* Full width on small screens */
        margin: 5px 0; /* Reduced margin */
      }

      .note {
        font-size: 14px; /* Increased font size for better readability */
        padding: 10px;
      }

      /* Adjusting the layout of the navigation buttons to stack vertically */
      nav {
        flex-direction: column;
        align-items: center;
        gap: 10px; /* Reduced gap for better alignment */
      }
    }

    @media (max-width: 480px) {
      h1 {
        font-size: 24px; /* Even smaller font on very small screens */
      }

      .nav-button {
        font-size: 12px;
        padding: 10px 20px; /* Further reduced padding */
        width: 45%; /* Full width on small screens */
        margin: 5px 0; /* Reduced margin */
      }

      .content {
        font-size: 14px; /* Slightly smaller font size */
      }

      .note {
        font-size: 14px;
        padding: 10px;
      }
    }
</style>

  <script>
    function checkRole() {
      // Retrieve token and role from localStorage
      const token = localStorage.getItem('token');
      const userRole = localStorage.getItem('role');

      // If there is no token or role, redirect to login page
      if (!token || !userRole) {
        window.location.href = '/login';
        return;
      }

      // Decode the token and get the userId (employeeId for employee role)
      try {
        const decodedToken = JSON.parse(atob(token.split('.')[1])); // Decode JWT token payload
        console.log('Decoded Token:', decodedToken);

        // Set employeeId based on the decoded token's userId
        const employeeId = decodedToken.userId;
        localStorage.setItem('employeeId', employeeId);

        // Optionally: Check token expiration or other properties here
        if (decodedToken.exp * 1000 < Date.now()) {
          localStorage.removeItem('token');
          localStorage.removeItem('role');
          localStorage.removeItem('employeeId');
          window.location.href = '/login'; // Redirect to login if token is expired
          return;
        }
      } catch (e) {
        console.error('Token decoding error:', e);
        localStorage.removeItem('token');
        localStorage.removeItem('role');
        localStorage.removeItem('employeeId');
        window.location.href = '/login'; // Redirect to login if token is invalid
        return;
      }

      // Show the "View My Tickets" button for all roles (admin, hr, employee, manager)
      document.getElementById('view-my-tickets-btn').style.display = 'block';

      // Role-based logic to show/hide other buttons
      if (userRole === 'admin' || userRole === 'hr') {
        document.getElementById('view-all-tickets-btn').style.display = 'block';
        document.getElementById('create-ticket-btn').style.display = 'block';
        document.getElementById('assign-employee-btn').style.display = 'block';
      } else if (userRole === 'hr') {
        document.getElementById('view-all-tickets-btn').style.display = 'block';
        document.getElementById('assign-employee-btn').style.display = 'block';
      } else if (userRole === 'employee') {
        document.getElementById('create-ticket-btn').style.display = 'block';
      } else if (userRole === 'manager') {
        document.getElementById('view-all-tickets-btn').style.display = 'block';
      } else {
        console.log('No valid role found in localStorage');
      }
    }

    // Run on page load
    window.onload = checkRole;

    // Function to view tickets
    function viewMyTickets() {
      window.location.href = '/helpdesk/view-tickets-status';  // This URL will render 'view-tickets-status.ejs'
    }
  </script>
</head>

<body>
  <%- include('partials/navbar') %>

  <div style="margin-top: 80px; position: relative; width: 98vw; align-items: center; justify-content: center; display: flex; flex-direction: column;">

    <h1>HelpDesk Dashboard</h1>

    <div class="content">
      <p>Welcome to your HelpDesk Dashboard. You can view and manage tickets based on your role.</p>
    </div>

    <nav>
      <button id="view-all-tickets-btn" onclick="window.location.href='/helpdesk/view-tickets'" class="nav-button" style="display: none;">All Tickets</button>
      <button id="create-ticket-btn" onclick="window.location.href='/helpdesk/create-ticket'" class="nav-button" style="display: none;">Create</button>
      <button id="assign-employee-btn" onclick="window.location.href='/helpdesk/assign-employee'" class="nav-button" style="display: none;">Assign</button>
      <button id="view-my-tickets-btn" onclick="viewMyTickets()" class="nav-button" style="display: none;">My Tickets</button>
    </nav>

    <div class="note">
      <p><strong>Note:</strong> Depending on your role, you may have different levels of access to manage tickets.</p>
    </div>
  </div>

 </div>
<%- include('partials/footer') %>
  
 </body>
</html>

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Profile</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">

  <style>
        /* Global Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
  background: linear-gradient(135deg, #000000, #1e3d59); /* Dark gradient background */

    font-family: 'Roboto', sans-serif;
    color: #f5f5f5; /* Light text color */
    padding: 20px;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    overflow-y: auto;
    margin: 0;
}

/* Title Styling with Gradient Text */
h1 {
  text-align: center;
  margin-top: 20px;
  color: #fff;
  font-size: 2.5rem;
  animation: fadeIn 1.5s ease-in-out;
}

/* Button styles */
button {
  background: linear-gradient(45deg, #0066cc, #333333);
  color: white;
  font-size: 16px;
  padding: 12px 20px;
  border: none;
  border-radius: 5px;
  margin: 10px;
  cursor: pointer;
  transition: all 0.3s ease;
}

button:hover {
  transform: scale(1.05);
  background: linear-gradient(45deg, #004d99, #222222);
}

button:focus {
  outline: none;
}

/* Profile details */
#profile-details {
  background-color: transparent;
  padding: 30px;
  border-radius: 10px;
  margin-top: 20px;
  width: 90%;
  max-width: 1000px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 40px;

  animation: fadeIn 2s ease-out;
}

.profile-field {
  font-weight: bold;
  background: linear-gradient(45deg, #3c96f0, #ee3548);
  -webkit-background-clip: text; /* Ensures the background gradient is applied to the text */
  color: transparent; /* Makes the text color transparent so the gradient can show through */
  display: inline-block;
  margin-top: 5px;
  transition: all 0.3s ease;
}

.profile-field:hover {
  transform: scale(1.02);
}

strong {
  color: transparent;
  background: linear-gradient(45deg, #d4ff14, #8fffdc); /* Light blue to light pink gradient */
  -webkit-background-clip: text; /* Applies the gradient only to the text */
  background-clip: text;
  margin-right: 10px;
  font-weight: bold; /* Keeps the text bold */
  transition: all 0.3s ease;
}


#profile-image {
  border-radius: 5px;
  margin-top: 10px;
}

/* Education table */
#education-table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 20px;
}

#education-table th,
#education-table td {
  padding: 12px;
  text-align: left;
  border: 1px solid #444;
}

#education-table th {
  background: linear-gradient(45deg, #004d99, #0066cc);
  color: white;
}

#education-table tr:nth-child(even) {
  background-color: rgba(255, 255, 255, 0.1);
}

#education-table tr:hover {
  background-color: rgba(255, 255, 255, 0.2);
}

/* Responsive Design */
@media screen and (max-width: 768px) {
  body {
    padding: 10px;
  }

  h1 {
    font-size: 2rem;
  }

  #profile-details {
    width: 100%;
    padding: 20px;
  }

  button {
    padding: 10px 18px;
    font-size: 14px;
  }

  #education-table {
    font-size: 14px;
  }

  #education-table th,
  #education-table td {
    padding: 8px;
  }
}

/* Animation */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Hover effect for profile field values */
.profile-field:hover {
  color: #f7d700;
  transform: scale(1.05);
  transition: all 0.3s ease;
}
        /* Title Styling */
      
    </style>
</head> 
<body>
  <%- include('partials/navbar') %> 
  <div style="margin-top: 60px; position: relative; width: 100%; align-items: center; justify-content: center; display: flex; flex-direction: column;">
    <h1>My Profile</h1>

    <div>
      <button id="edit-btn" onclick="toggleEditMode()">Edit Profile</button>
      <button id="print-btn" onclick="printProfile()">Print Profile</button> <!-- Print Button -->
    </div>

    <div id="profile-details">
      <!-- Profile Fields -->

      <!-- Profile Image -->
      <p><strong></strong> <span id="image" class="profile-field">
        <img id="profile-image" src="" alt="Profile Image" width="100" height="100" style="display:none;">
      </span></p>

      <p><strong>Employee ID:</strong> <span id="empId" class="profile-field"></span></p>
      <p><strong>Name:</strong> <span id="name" class="profile-field"></span></p>
      <p><strong>Email:</strong> <span id="email" class="profile-field"></span></p>
      <p><strong>Role:</strong> <span id="role" class="profile-field"></span></p>
      <p><strong>Department:</strong> <span id="department" class="profile-field"></span></p>
      <p><strong>Contact:</strong> <span id="contact" class="profile-field"></span></p>
      <p><strong>Gender:</strong> <span id="gender" class="profile-field"></span></p>
      <p><strong>Date of Birth:</strong> <span id="dateOfBirth" class="profile-field"></span></p>
      <p><strong>Salary:</strong> <span id="salary" class="profile-field"></span></p>

      <p><strong>Work Experience:</strong> <span id="workExperience" class="profile-field"></span></p>
      <p><strong>Skills:</strong> <span id="skills" class="profile-field"></span></p>
      <p><strong>Certifications:</strong> <span id="certifications" class="profile-field"></span></p>
      <p><strong>Manager Name:</strong> <span id="managerName" class="profile-field"></span></p>
      <p><strong>Performance Rating:</strong> <span id="performanceRating" class="profile-field"></span></p>
      <p><strong>Employment Type:</strong> <span id="employmentType" class="profile-field"></span></p>
      <p><strong>Hire Date:</strong> <span id="hireDate" class="profile-field"></span></p>
      <p><strong>Employment Status:</strong> <span id="employmentStatus" class="profile-field"></span></p>
      <p><strong>Last Promotion Date:</strong> <span id="lastPromotionDate" class="profile-field"></span></p>

      <p><strong>Is Married:</strong> <span id="isMarried" class="profile-field"></span></p>
      <p><strong>Is Active:</strong> <span id="isActive" class="profile-field"></span></p>

      <!-- Address Field -->
      <p><strong>Address:</strong> <span id="address" class="profile-field"></span></p>

      <p><strong>Education:</strong></p>
      <table id="education-table">
        <thead>
          <tr>
            <th>School Name</th>
            <th>Passing Year</th>
            <th>Degree</th>
            <th>Marks</th>
          </tr>
        </thead>
        <tbody id="education-body"></tbody>
      </table>
    </div>

  <%- include('partials/footer') %> 

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const userId = localStorage.getItem('userId'); 
      const token = localStorage.getItem('token'); 

      // Check if the user is logged in
      if (!userId || !token) {
        alert('You are not logged in. Please login first.');
        window.location.href = '/login';
        return;
      }

      // Fetch profile data
      console.log('Fetching profile data for userId:', userId);
      fetch(`/api/emp/employees/${userId}`, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      })
        .then(response => response.json())
        .then(data => {
          console.log('Fetched profile data:', data); // Log profile data
          if (data && data._id) {
            populateProfile(data);
            fetchImage(data._id);
            if (data.manager) {
              fetchManagerName(data.manager); // Fetch manager's name
            }
          } else {
            alert('Failed to fetch profile data.');
          }
        })
        .catch(error => {
          console.error('Error fetching profile details:', error);
          alert('Error fetching profile data.');
        });
    });

    // Function to toggle edit mode and redirect to the update profile page
    function toggleEditMode() {
      console.log('Redirecting to edit profile page...');
      window.location.href = '/update-profile';
    }

    // Function to populate profile data on the page
    function populateProfile(data) {
      console.log('Populating profile data:', data); // Log data being populated

      document.getElementById('empId').innerText = data.empId;
      document.getElementById('name').innerText = data.name;
      document.getElementById('email').innerText = data.email;
      document.getElementById('role').innerText = data.role;
      document.getElementById('department').innerText = data.department;
      document.getElementById('contact').innerText = data.contact;
      document.getElementById('gender').innerText = data.gender;
      document.getElementById('dateOfBirth').innerText = new Date(data.dateOfBirth).toLocaleDateString();
      document.getElementById('salary').innerText = data.salary;
      document.getElementById('workExperience').innerText = data.workExperience;
      document.getElementById('skills').innerText = data.skills.join(', ');
      document.getElementById('certifications').innerText = data.certifications.join(', ');

      document.getElementById('performanceRating').innerText = data.performanceRating;
      document.getElementById('employmentType').innerText = data.employmentType;
      document.getElementById('hireDate').innerText = new Date(data.hireDate).toLocaleDateString();
      document.getElementById('employmentStatus').innerText = data.employmentStatus;
      document.getElementById('lastPromotionDate').innerText = new Date(data.lastPromotionDate).toLocaleDateString();

      document.getElementById('isMarried').innerText = data.isMarried ? 'Yes' : 'No';
      document.getElementById('isActive').innerText = data.isActive ? 'Yes' : 'No';

      // Populate Education Table
      const educationTableBody = document.getElementById('education-body');
      educationTableBody.innerHTML = '';
      data.education.forEach(ed => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${ed.schoolName}</td>
          <td>${ed.passingYear}</td>
          <td>${ed.degreeName}</td>
          <td>${ed.marks}</td>
        `;
        educationTableBody.appendChild(row);
      });

      // Set Address Field
      document.getElementById('address').innerText = data.address;

      console.log('Profile populated successfully.');
    }

    // Function to fetch profile image
    function fetchImage(userId) {
      const token = localStorage.getItem('token');

      console.log('Fetching image for userId:', userId); // Log userId for image fetch

      fetch(`/api/emp/employee-image/${userId}`, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${token}`,
        }
      })
      .then(response => response.json())
      .then(data => {
        console.log('Fetched image data:', data); // Log image data
        if (data && data.image) {
          const profileImage = document.getElementById('profile-image');
          profileImage.src = `/${data.image}`;
          profileImage.style.display = 'block'; // Show the image
          console.log('Image displayed.');
        } else {
          console.log('No image found for the user.');
        }
      })
      .catch(error => {
        console.error('Error fetching image:', error);
      });
    }

    // Fetch Manager Name from the manager ID
    function fetchManagerName(managerId) {
      const token = localStorage.getItem('token');
      console.log('Fetching manager name for managerId:', managerId);

      fetch(`/api/emp/employees/${managerId}`, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data && data.name) {
          document.getElementById('managerName').innerText = data.name;
        } else {
          console.log('Manager name not found.');
        }
      })
      .catch(error => {
        console.error('Error fetching manager name:', error);
      });
    }

    // Function to trigger printing of profile page
    function printProfile() {
      console.log('Printing profile...');
      window.print();
    }
  </script>
</body>
</html>
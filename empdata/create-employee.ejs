<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create Employee</title>
    <style>
      /* General Styles */
body {
    background: linear-gradient(135deg, #000000, #1e3d59); /* Dark gradient background */
    color: #f5f5f5; /* Light-colored text for contrast */
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    min-height: 100vh;
    margin: 0;
    font-family: 'Arial', sans-serif;
}

/* Title Styling */
h2 {
    color: #c5c3c3; /* Light gray text color */
    font-size: 36px;
    margin-top: 30px;
    text-align: center;
    font-weight: 600;
    letter-spacing: 1px;
}

/* Form Styles */
#createEmployeeForm {
    width: 80%;
    max-width: 700px;
    margin: 20px auto;
    background-color: transparent; /* Dark background for form */
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Soft shadow */
}

/* Form Heading */
#createEmployeeForm h3 {
    color: #fff;
    text-align: center;
    font-size: 22px;
    margin-bottom: 20px;
}

/* Input fields, select box, and button styling */
form input, form select, form button {
    width: 100%; /* Adjust width to 100% for better layout */
    padding: 12px;
    margin: 12px 0;
    border: 1px solid #ddd;
    border-radius: 6px;
    font-size: 16px;
    background-color: transparent; /* Dark background for inputs */
    color: #fff; /* White text for inputs */
    transition: border-color 0.3s ease, background-color 0.3s ease;
}

/* Placeholder text */
form input::placeholder,
form select::placeholder {
    color: #bdc3c7;
    opacity: 0.8;
}

/* Input focus styling */
form input:focus, form select:focus {
    border-color: #3498db;
    background-color: #34495e; /* Slightly lighter dark background on focus */
}

/* Paired fields layout (50% each) */
.form-pair {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    margin-bottom: 20px;
}

.form-pair .form-group {
    width: 48%; /* Each input field takes up 48% of the width */
}

/* Button Styles */
form button {
    background-color: #3498db; /* Blue background for normal buttons */
    color: white;
    border: none;
    cursor: pointer;
    font-size: 16px;
    padding: 14px;
    border-radius: 6px;
    transition: background-color 0.3s ease;
    margin-top: 20px;
}

form button:hover {
    background-color: #2980b9;
}

form button[type="submit"] {
    background-color: #2ecc71; /* Green background for submit button */
}

form button[type="submit"]:hover {
    background-color: #27ae60;
}

/* Mobile Responsive */
@media screen and (max-width: 768px) {
    #createEmployeeForm {
        width: 95%;
        margin: 20px 10px;
        padding: 20px;
    }

    /* Stack fields vertically on small screens */
    .form-pair {
        flex-direction: column;
    }

    .form-pair .form-group {
        width: 100%; /* Each field takes full width on mobile */
    }

    /* Adjust button size for mobile */
    form button {
        width: 100%;
        font-size: 14px;
        padding: 12px 18px;
    }

    /* Input field adjustments for mobile */
    form input, form select {
        font-size: 16px;
        padding: 14px;
    }

    /* Smaller margins on mobile */
    form label {
        font-size: 12px;
    }
}

/* Tablet and Large Mobile Devices */
@media screen and (max-width: 1024px) {
    .form-pair {
        flex-direction: row;
        gap: 20px;
    }

    .form-pair .form-group {
        width: 48%; /* Each field takes 48% width on medium devices */
    }

    form button {
        width: 100%;
    }
}

/* Desktop Responsive */
@media screen and (min-width: 1025px) {
    #createEmployeeForm {
        width: 60%; /* Slightly narrower form for larger screens */
    }

    form input, form select, form button {
        font-size: 16px; /* Increase font size for readability on larger screens */
        padding: 16px;
    }

    form button {
        font-size: 18px;
    }

    .form-pair .form-group {
        width: 48%; /* 50% layout for two fields in a row */
    }
}

    </style>
</head>

<body>
  <%- include('partials/navbar') %> 

  <div style="margin-top: 60px; position: relative; width: 100%; align-items: center;  justify-content: center; display:  flex; flex-direction: column;">
  <h2>Create Employee</h2>
  <form id="createEmployeeForm">
    <!-- Personal Information -->
    <input type="text" id="firstName" placeholder="First Name" required>
    <input type="text" id="lastName" placeholder="Last Name" required>
    <input type="email" id="email" placeholder="Email" required>
    <input type="password" id="password" placeholder="Password" required>
    <input type="date" id="dob" placeholder="Date of Birth" required>
    <select id="gender" required>
      <option value="male">Male</option>
      <option value="female">Female</option>
      <option value="other">Other</option>
    </select>

    <!-- Employment Details -->
    <select id="role" required>
      <option value="employee">Employee</option>
      <option value="hr">HR</option>
      <option value="manager">Manager</option>
      <option value="admin">Admin</option>
    </select>
    <input type="date" id="hireDate" placeholder="Hire Date" required>
    
    
    <select type="text" id="department">
      <option value="QA">QA</option>
      <option value="SR Developer">SR Developer</option>
      <option value="JR  Developer">JR  Developer</option>
      <option value="Intern">Intern</option>
      <option value="Project Manager">Project Manager</option>
      <option value="Jr Project Manager"> Jr Project Manager</option>
      <option value="Qa Manager">Qa Manager</option>
      <option value="DEVops Er">DEVops Er</option>
      <option value="TESTER">TESTER</option>
    </select><br>





    <input type="text" id="salary" placeholder="Salary" required >
    <select id="status" required>
      <option value="active">Active</option>
      <option value="inactive">Inactive</option>
    </select>
    <input type="text" id="managerId" placeholder="Manager ID (if applicable)">
    <select id="employmentType" required>
      <option value="full-time">Full-time</option>
      <option value="part-time">Part-time</option>
      <option value="contract">Contract</option>
    </select>

    <!-- Contact Information -->
    <input type="tel" id="phone" placeholder="Phone Number" required>
    <input type="text" id="address" placeholder="Address" required>
    <input type="text" id="city" placeholder="City" required>
    <input type="text" id="state" placeholder="State" required>
    <input type="text" id="zipCode" placeholder="Zip Code" required>
    <input type="text" id="country" placeholder="Country" required>

    <!-- Emergency Contact -->
    <input type="text" id="emergencyContactName" placeholder="Emergency Contact Name" required>
    <input type="tel" id="emergencyContactPhone" placeholder="Emergency Contact Phone" required>

    <!-- Optional Profile Picture -->
    <input type="file" id="profilePicture" accept="image/*">

    <button type="submit">Create</button>
  </form>
 </div>
 <%- include('partials/footer') %> 

  <script>
    document.getElementById('createEmployeeForm').addEventListener('submit', async (e) => {
      e.preventDefault();

      const token = localStorage.getItem('token');
      if (!token) {
        alert('Please login first.');
        window.location.href = '/login';
        return;
      }

      const data = new FormData();
      // Personal Information
      data.append('firstName', document.getElementById('firstName').value);
      data.append('lastName', document.getElementById('lastName').value);
      data.append('email', document.getElementById('email').value);
      data.append('password', document.getElementById('password').value);
      data.append('dob', document.getElementById('dob').value);
      data.append('gender', document.getElementById('gender').value);

      // Employment Details
      data.append('role', document.getElementById('role').value);
      data.append('hireDate', document.getElementById('hireDate').value);
      data.append('department', document.getElementById('department').value);
      data.append('salary', document.getElementById('salary').value);
      data.append('status', document.getElementById('status').value);
      data.append('managerId', document.getElementById('managerId').value);
      data.append('employmentType', document.getElementById('employmentType').value);

      // Contact Information
      data.append('phone', document.getElementById('phone').value);
      data.append('address', document.getElementById('address').value);
      data.append('city', document.getElementById('city').value);
      data.append('state', document.getElementById('state').value);
      data.append('zipCode', document.getElementById('zipCode').value);
      data.append('country', document.getElementById('country').value);

      // Emergency Contact
      data.append('emergencyContactName', document.getElementById('emergencyContactName').value);
      data.append('emergencyContactPhone', document.getElementById('emergencyContactPhone').value);

      // Append the profile picture if selected
      if (document.getElementById('profilePicture').files[0]) {
        data.append('profilePicture', document.getElementById('profilePicture').files[0]);
      }

      try {
        const response = await fetch('/api/emp/employees', {
          method: 'POST',
          headers: {
            'Authorization': `Bearer ${token}`,
          },
          body: data,
        });

        const result = await response.json();
        if (response.status === 201) {
          alert('Employee created successfully!');
        } else {
          alert(result.message || 'Error creating employee');
        }
      } catch (error) {
        alert('Error creating employee');
      }
    });
  </script>
</body>

</html>
